name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node (se houver package.json)
      - name: Detect Node project
        id: detect_node
        run: |
          if [ -f package.json ]; then
            echo "is_node=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: steps.detect_node.outputs.is_node == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install deps (Node)
        if: steps.detect_node.outputs.is_node == 'true'
        run: npm ci

      - name: Test (Node)
        if: steps.detect_node.outputs.is_node == 'true'
        run: |
          if npm run | grep -q " test"; then
            npm test
          else
            echo "Sem script de teste. Pulando."
          fi

      # Python (se houver requirements/pyproject)
      - name: Detect Python project
        id: detect_py
        run: |
          if [ -f requirements.txt ] || [ -f pyproject.toml ]; then
            echo "is_python=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Python
        if: steps.detect_py.outputs.is_python == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (Python)
        if: steps.detect_py.outputs.is_python == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      - name: Test (Python)
        if: steps.detect_py.outputs.is_python == 'true'
        run: pytest -q

      # Fallback: checagem básica de estrutura (sempre roda)
      - name: Basic repo check
        run: |
          echo "Conteúdo do repositório:"
          ls -la
